#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
//layout(location = 1) in vec3 vertexColor;
//layout(location = 2) in vec3 vertexNormal_modelspace;
layout (location = 4) in mat4 M;

//out vec3 vertexNormal_cameraspace;

// Values that stay constant for the whole mesh.
uniform mat4 lV;
uniform mat4 lP;
//uniform mat4 lightDepthMV;

void main(){
	mat4 lightDepthMVP = lP * lV * M;
	gl_Position = lightDepthMVP * vec4(vertexPosition_modelspace, 1);
	//vertexNormal_cameraspace = normalize((lightDepthMV * vec4(vertexNormal_modelspace, 1)).xyz);
}
